[{"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/index.js":"1","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/reportWebVitals.js":"2","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/App.js":"3","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/Componenets/Navbar.js":"4","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Homescreen.js":"5","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/Componenets/Room.js":"6","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Bookingscreen.js":"7","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Landingscreen.js":"8","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Registerscreen.js":"9","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Loginscreen.js":"10"},{"size":534,"mtime":1695278546815,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1695277899996,"results":"13","hashOfConfig":"12"},{"size":878,"mtime":1702748611132,"results":"14","hashOfConfig":"12"},{"size":617,"mtime":1698902821400,"results":"15","hashOfConfig":"12"},{"size":700,"mtime":1702749661931,"results":"16","hashOfConfig":"12"},{"size":1794,"mtime":1702742265927,"results":"17","hashOfConfig":"12"},{"size":558,"mtime":1701372953034,"results":"18","hashOfConfig":"12"},{"size":568,"mtime":1698902180416,"results":"19","hashOfConfig":"12"},{"size":1864,"mtime":1698919350182,"results":"20","hashOfConfig":"12"},{"size":1893,"mtime":1698902100209,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1ujrk6a",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/index.js",[],[],[],"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/reportWebVitals.js",[],[],"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/App.js",["57"],[],"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/Componenets/Navbar.js",[],[],"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Homescreen.js",[],[],"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/Componenets/Room.js",["58","59"],[],"import React,{useState} from 'react'\nimport {Modal,Button,Carousel} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nfunction Room({room}) {\n          const [show, setShow] = useState(false);\n          const handleClose = () => setShow(false);\n          const handleShow = () => setShow(true);\n  return (\n    <div className=\"row bs\">\n          <div className=\"col-md-4\">\n             <img src={room.imageurls[0]} className='smallimg' />\n          </div>\n         <div className=\"col-md-7 text-left\">\n           <h1>{room.name}</h1>\n           <b>\n                    <p>Max count : {room.maxcount}</p>\n                    <p>phone number : {room.phonenumber}</p>\n                    <p>Type : {room.type}</p>\n           </b>\n\n           <div style={{float:'right'}}>\n            <Link to={`/book/${room._id}`}>\n            <Button className='btn btn-primary m-2'>Book Now</Button>\n            </Link>\n                    <button className=\"btn btn-primary\" onClick={handleShow}>view details</button>\n           </div>\n         </div>\n\n      <Modal show={show} onHide={handleClose} size='lg'>\n        <Modal.Header>\n          <Modal.Title>{room.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Carousel prevLabel='' nextLabel=''>\n          {room.imageurls.map(url=>{\n                    return <Carousel.Item>\n                    <img className=\"d-block w-100\" \n                    src={url} \n                    alt=\"first image\"/>\n                  </Carousel.Item>\n          })}\n\n      </Carousel>\n      <p>{room.description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Room","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Bookingscreen.js",["60","61"],[],"import React from \"react\";\nimport { useState,useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nfunction Bookingscreen () {\n  let { roomid } = useParams();\n  const [rooms, setrooms] = useState([])\n  useEffect(() => {\n    async function fetchMyAPI() {\n      let data = await fetch(\"./api/rooms/getroombyid\",{roomid}).data;\n      data = await data.json()\n      setrooms(data)\n    }\n    fetchMyAPI()\n  }, [])\n\n  return (\n    <div>\n      <h1>Book screen</h1>\n      <h1>Room id = {roomid}</h1>\n    </div>\n  );\n}\n\nexport default Bookingscreen;","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Landingscreen.js",[],[],"/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Registerscreen.js",["62","63","64"],[],"import React from 'react'\nimport { useState,useeffect } from 'react'\nimport axios from \"axios\"\nimport { Navigate, useNavigate } from 'react-router-dom';\nfunction Registerscreen() {\n  const navigation=useNavigate();\n  const [name,setname]=useState('');\n  const [email,setemail]=useState('');\n  const [password,setpassword]=useState('');\n  const [confirmpassword,setconfirmpassword]=useState('');\n async function register(){\n    if(password===confirmpassword){\n    const user={\n      name,\n      email,\n      password,\n      confirmpassword\n    }\n    try {\n      const result=await axios.post('/api/users/register',user).data;\n       navigation(\"/login\");\n\n    } catch (error) {\n      console.log(error);\n    }\n    // console.log(user);\n  }else{\n    alert('password not matched')\n  }\n  }\n  return (\n    <div>   \n          <div className=\"row justify-content-center mt-5\">\n            <div className=\"col-md-5 mt-5\">\n               <div className='bs'>\n                  <h1>Register</h1>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"email\" value={email} \n                  onChange={(e)=>{setemail(e.target.value)}}/>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"name\" value={name} \n                  onChange={(e)=>{setname(e.target.value)}}/>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"password\" value={password} \n                  onChange={(e)=>{setpassword(e.target.value)}}/>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"confirm password\" value={confirmpassword} \n                  onChange={(e)=>{setconfirmpassword(e.target.value)}}/>\n                  <button className='btn btn-primary mt-3' onClick={register}>Register</button>\n               </div>\n\n            </div>\n          </div>\n   </div>\n  )\n}\n\nexport default Registerscreen","/Users/ranjeetkumar/Desktop/web d 2023/YOR-STAY/frontend/src/screens/Loginscreen.js",["65"],[],"import React from 'react'\nimport { useState,useeffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n function Loginscreen() {\n  const history=useNavigate();\n  const [email,setemail]=useState('');\n  const [password,setpassword]=useState('');\n  const Login=async (e)=>{\n    e.preventDefault();\n    const user={\n      email,\n      password\n    }\n    try {\n    //  const res = await fetch('/login',{\n    //   method:\"POST\",\n    //   headers:{\n    //     \"Content-type\":\"Aplication/json\"\n    //   },body:JSON.stringify()({\n    //     email,\n    //     password\n    //   })\n    //  });\n    //  const data=res.json();\n    //  if(res.status === 400 || !data){\n    //   window.alert(\"credenatial wrong\");\n    //  }else{\n    //   window.alert(\"login successfull\")\n    //   history(\"/home\");\n    //  }\n      const result= await axios.post('/api/users/login',user).data;\n      if(result){\n        window.alert(\"wrong credential\")\n      }else{\n        window.alert(\"login successfull\")\n        history(\"/home\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return (\n    <div>   \n          <div className=\"row justify-content-center mt-5\">\n            <div className=\"col-md-5 mt-5\">\n               <div className='bs'>\n                  <h1>Login</h1>\n                  <form method=\"POST\">\n                  <input type=\"text\" className=\"form-control\" placeholder=\"email\" value={email} \n                  onChange={(e)=>{setemail(e.target.value)}}/>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"password\" value={password} \n                  onChange={(e)=>{setpassword(e.target.value)}}/>\n                  <button className='btn btn-primary mt-3' onClick={Login}>Login</button>\n                  </form>\n               </div>\n\n            </div>\n          </div>\n   </div>\n  )\n}\n\nexport default Loginscreen",{"ruleId":"66","severity":1,"message":"67","line":3,"column":37,"nodeType":"68","messageId":"69","endLine":3,"endColumn":41},{"ruleId":"70","severity":1,"message":"71","line":11,"column":14,"nodeType":"72","endLine":11,"endColumn":66},{"ruleId":"73","severity":1,"message":"74","line":37,"column":21,"nodeType":"72","endLine":39,"endColumn":40},{"ruleId":"66","severity":1,"message":"75","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":14,"column":6,"nodeType":"78","endLine":14,"endColumn":8,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"80","line":2,"column":19,"nodeType":"68","messageId":"69","endLine":2,"endColumn":28},{"ruleId":"66","severity":1,"message":"81","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"66","severity":1,"message":"82","line":20,"column":13,"nodeType":"68","messageId":"69","endLine":20,"endColumn":19},{"ruleId":"66","severity":1,"message":"80","line":2,"column":19,"nodeType":"68","messageId":"69","endLine":2,"endColumn":28},"no-unused-vars","'link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'rooms' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roomid'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'useeffect' is defined but never used.","'Navigate' is defined but never used.","'result' is assigned a value but never used.",{"desc":"84","fix":"85"},"Update the dependencies array to be: [roomid]",{"range":"86","text":"87"},[423,425],"[roomid]"]